#!/usr/bin/make -f
# Pipeline for the LINKS program
# Written by Murathan Goktas
#Default Parameters

# Input Names 
draft=draft
readsFof=readsFof

# Find the complete long read file name
#fastq=$(shell test -f $(reads).fq.gz && echo "true")
#fasta=$(shell test -f $(reads).fa.gz && echo "true")
#ifeq ($(fastq), true)
#long_reads=$(reads).fq.gz
#endif
#ifeq ($(fasta), true)
#long_reads=$(reads).fa.gz
#endif

# parameters
d=4000
k=15
t=2
o=0
e=0.1
z=500
p=0.001
x=0
v=0

l=5
a=0.3

b=k$k_t$t_l$l_a$a_o$o_e$e

bin=$(dir $(realpath $(firstword $(MAKEFILE_LIST))))

SHELL=bash -e -o pipefail
ifeq ($(shell zsh -e -o pipefail -c 'true' 2>/dev/null; echo $$?), 0)
#Set pipefail to ensure that all commands of a pipe succeed.
SHELL=zsh -e -o pipefail
# Report run time and memory usage with zsh.
export REPORTTIME=1
export TIMEFMT=time user=%U system=%S elapsed=%E cpu=%P memory=%M job=%J
endif

# Use pigz or bgzip for parallel compression if available.
ifneq ($(shell command -v pigz),)
gzip=pigz -p$t
else
ifneq ($(shell command -v bgzip),)
gzip=bgzip -@$t
else
gzip=gzip
endif
endif

# Record run time and memory usage in a file using GNU time.
ifdef time
ifneq ($(shell command -v gtime),)
gtime=command gtime -v -o $@.time
else
gtime=command time -v -o $@.time
endif
endif


.PHONY: all version help clean LINKS
.DELETE_ON_ERROR:
.SECONDARY: 


all: help 
# Help
help:
	@echo "Usage: ./links-make [COMMAND] [OPTION=VALUE]..."
	@echo "    Commands:"
	@echo ""
	@echo "	links		pair contigs and create scaffolds"
	@echo "	help            display this help page"
	@echo "	version         display the software version"
	@echo "	clean           remove intermediate files"
	@echo ""
	@echo "    General Options:"
	@echo ""
	@echo "	draft           draft name [draft]. File must have .fasta or .fa extension"
	@echo "	reads           read name [reads]. File must have .fastq.gz or .fq.gz extension"
	@echo "	time		logs time and memory usage to file for main steps (Set to 1 to enable logging)"	
	@echo ""
	@echo "     Options:"
	@echo ""
	@echo "	t		number of threads used [8]"

clean:
	rm -f *.pairing_issues *.tsv
	@echo "Clean Done"

version:
	@echo "links-make v1.0.0"

# Make an Empty fof File
empty.fof:
	touch $@

$(b).tigpair_checkpoint.tsv : $(draft) $(readsFof)
	echo $(d)
	$(gtime) $(bin)/LINKS.o -f $(draft) -s $(readsFof) -d $d -k $k -t $t -o $o -e $e -z $z -p $p -x $x -b $b

$(b).scaffold.fa : $(b).tigpair_checkpoint.tsv empty.fof
	$(gtime) $(bin)/../links_v1.8.7/LINKS.pl -f $(draft) -s empty.fof -b $b -l $l -a $a

# Run LINKS
LINKS: $(b).scaffold.fa
